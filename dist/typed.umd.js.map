{"version":3,"file":"typed.umd.js","sources":["../src/defaults.js","../src/initializer.js","../src/html-parser.js","../src/typed.js"],"sourcesContent":["/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!',\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {},\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.display = 'none';\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n    // the order of strings\n    self.sequence = [];\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    this.appendAnimationCss(self);\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendAnimationCss(self) {\n    const cssDataName = 'data-typed-js-css';\n    if (!self.autoInsertCss) {\n      return;\n    }\n    if (!self.showCursor && !self.fadeOut) {\n      return;\n    }\n    if (document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.type = 'text/css';\n    css.setAttribute(cssDataName, true);\n\n    let innerCss = '';\n    if (self.showCursor) {\n      innerCss += `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n    }\n    if (self.fadeOut) {\n      innerCss += `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n    }\n    if (css.length === 0) {\n      return;\n    }\n    css.innerHTML = innerCss;\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // Check if there is some text in the element, if yes start by backspacing the default message\n      if (!this.currentElContent || this.currentElContent.length === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        // Start typing\n        this.backspace(this.currentElContent, this.currentElContent.length);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substr(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substr(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, false);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substr(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substr(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.setAttribute('aria-hidden', true);\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n"],"names":["defaults","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","self","onComplete","preStringTyped","arrayPos","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","Initializer","options","elementId","el","document","querySelector","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","s","trim","style","display","Array","prototype","slice","apply","children","stringsLength","length","i","stringEl","push","innerHTML","strPos","stopNum","curLoop","sequence","pause","status","typewrite","curString","curStrPos","typingComplete","currentElContent","getCurrentElContent","appendAnimationCss","value","cssDataName","css","createElement","type","setAttribute","innerCss","body","appendChild","initializer","HTMLParser","curChar","substr","charAt","endTag","htmlParser","Typed","load","begin","start","stop","toggleBlinking","backspace","reset","restart","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","classList","contains","remove","humanize","humanizer","numChars","setPauseStatus","typeHtmlChars","pauseTime","test","skip","exec","parseInt","temporaryPause","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","nextString","complete","initFadeOut","backSpaceHtmlChars","curStringAtPosition","isTyping","isBlinking","add","speed","Math","round","random","sort","className","str","addEventListener","e","insertBefore","nextSibling"],"mappings":"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"}