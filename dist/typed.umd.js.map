{"version":3,"file":"typed.umd.js","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../src/defaults.js","../src/initializer.js","../src/html-parser.js","../src/typed.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!',\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {},\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.display = 'none';\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n    // the order of strings\n    self.sequence = [];\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    this.appendAnimationCss(self);\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendAnimationCss(self) {\n    const cssDataName = 'data-typed-js-css';\n    if (!self.autoInsertCss) {\n      return;\n    }\n    if (!self.showCursor && !self.fadeOut) {\n      return;\n    }\n    if (document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.type = 'text/css';\n    css.setAttribute(cssDataName, true);\n\n    let innerCss = '';\n    if (self.showCursor) {\n      innerCss += `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n    }\n    if (self.fadeOut) {\n      innerCss += `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n    }\n    if (css.length === 0) {\n      return;\n    }\n    css.innerHTML = innerCss;\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substr(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // Check if there is some text in the element, if yes start by backspacing the default message\n      if (!this.currentElContent || this.currentElContent.length === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        // Start typing\n        this.backspace(this.currentElContent, this.currentElContent.length);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substr(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substr(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, false);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substr(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substr(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.setAttribute('aria-hidden', true);\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n"],"names":["require$$0","defaults","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","self","onComplete","preStringTyped","arrayPos","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","Initializer","options","elementId","el","document","querySelector","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","s","trim","style","display","Array","prototype","slice","apply","children","stringsLength","length","i","stringEl","push","innerHTML","strPos","stopNum","curLoop","sequence","pause","status","typewrite","curString","curStrPos","typingComplete","currentElContent","getCurrentElContent","appendAnimationCss","value","cssDataName","css","createElement","type","setAttribute","innerCss","body","appendChild","initializer","HTMLParser","curChar","substr","charAt","endTag","htmlParser","Typed","load","begin","start","stop","toggleBlinking","backspace","reset","restart","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","classList","contains","remove","humanize","humanizer","numChars","setPauseStatus","typeHtmlChars","pauseTime","test","skip","exec","parseInt","temporaryPause","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","nextString","complete","initFadeOut","backSpaceHtmlChars","curStringAtPosition","isTyping","isBlinking","add","speed","Math","round","random","sort","className","str","addEventListener","e","insertBefore","nextSibling"],"mappings":"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"}